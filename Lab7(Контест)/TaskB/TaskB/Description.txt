В некотором царстве тридесятом государстве жил-был царь. И была у него дочь - царевна Усмеяна. Задумал царь дочь
замуж выдать. В тридесятом царстве было всего N городов и деревень, пронумерованных числами от 1 до N, и M дорог.
Кроме того, в государстве была одна столица (она может располагаться как в городе, так и в деревне, где царь - 
там и столица).
Отправил царь гонцов во все города, всех желающих звать в столицу на состязания, по одному гонцу на город.
Известно, что в тридесятом царстве каждая дорога соединяет два каких-то поселения, и для проезда по ней требуется
ti минут.

Формат ввода
В файле input.txt сначала записаны 3 числа N, M, K — количество населенных пунктов, количество дорог и количество
городов (2 ≤ N ≤ 1000, 1 ≤ M ≤ 10000, 1 ≤ K ≤ N). Далее записан номер столицы C (1 ≤ C ≤ N). Следующие K чисел
задают номера городов. Далее следуют M троек чисел si, ei, ti, описывающих дороги: si и ei — номера населенных
пунктов, которые соединяет данная дорога, а ti — время для проезда по ней (1 ≤ ti ≤ 100).
Гарантируется, что до каждого города из столицы можно добраться по дорогам (возможно, через другие населенные
пункты) и то, что любые два населенных пункта соединены не более, чем одной дорогой.

Формат вывода
В файл output.txt выведите K пар чисел: для каждого города должен быть выведен его номер и минимальное время,
когда гонец может в нем оказаться (время измеряется в минутах с того момента, как гонцы выехали из столицы).
Пары в выходном файле должны быть упорядочены по времени прибытия гонца, а в случае совпадения времени следует
сортировать эти пары по номерам городов.

Пример 1
Ввод	
5 4 5 1
1 2 3 4 5
1 2 1
2 3 10
3 4 100
4 5 100
Вывод
1 0
2 1
3 11
4 111
5 211

Пример 2
Ввод	
5 5 3 1
2 4 5
2 1 1
2 3 10
3 4 100
4 5 100
1 5 1 
Вывод
2 1
5 1
4 101